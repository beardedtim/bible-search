/**
 * This file is autogenerated. If you want to change it, you can
 * but it will be overriden on the next generation
 */
import jsonSchemas from './schemas.json';
import createValidator from '@shared/validate-json';
import type { ReturnValue } from '@shared/validate-json';
import { Schema as JSONSchema } from 'jsonschema';

type SchemaConfig = {
  [K in keyof typeof jsonSchemas]: JSONSchema;
};

type Schemas = {
  [K in keyof typeof jsonSchemas]: <T>(value: any) => ReturnValue<T>;
};

const data = jsonSchemas as unknown as SchemaConfig;

const validators = Object.keys(data)
  .filter((name) => name !== '$defs')
  .reduce((a, c) => {
    const key = c as keyof SchemaConfig;

    a[key] = createValidator(data[key]);
    return a;
  }, {} as Schemas);

export default validators;
